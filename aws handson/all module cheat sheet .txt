
-----------------------------------------------------------------------------------------------------------------------------------------
EFS - elastic file store                           # note - efs service not supported by windows ec2 , for windows fsx service used

steps - 
efs steps :-  create efs ---> add 'mount target' while creating efs
              efs-security group - add nfs rule 
              go to console --> select created efs --> attach --> copy " Using the NFS client: " command and paste in all ec2 
        
        
ec2 steps :-    install required ec2 in which we want to attach efs 
                in ec2-security group - add nfs rule
                install 'nfs' in ec2 
                create common folder for efs
                
command to check efs attach or not
# df -h 

command for installing nfs on different ec2 :-

ubuntu -       sudo apt install nfs-common

amazon linux - sudo yum -y install nfs-utils

redhat -        sudo yum -y install nfs-utils

-------------------------------------------------------------------------------------------------------------------------------------------       


Elastic load balancer:

classic load balancer - this is old one with limited functionality - 

  steps to create load balancer : 
      --> create load Balancers :
            - Create an internal load balancer - if not enabled -: means lb is public
                                                 if enabled --: means lb is not public 
                                                 
            - add list of ec2 : select here list of ec2 on which we want to distribute load
            - add security group with - http and https rule 
  
  
  
Application Load Balancer :

 steps - create load balancer :-
                - internet facing - used to access from internet /public access
                - internal - use to private access
                
                - select awailability zones in which ec2 are created           # note- for appln lb creation at least 2 az should be selected.
                - select security groups 
                
         ****   - add target group :-                                                # note for appln lb and network lb target group needed

  step for target group creation :- 
                - choose target type - instance 
                - register targets - select list of ec2 for which we want to make a group 
                
            
           
 --------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 AUTO SCALING GROUP 
                   
  asg creation steps - follow sequence while creating 
  
              1. AMI 
              2. Launch configuration or launch template -                  # in template we define os , instance type , ebs for server while auto scaling
              3. load balancer
              4. start creating asg
              5. cloud watch alarm
              6. scaling policy for asg
              
      
   Auto scaling group creation 
    step 1 :- 
        - select launch configuration 
        - select availability zone                                                         # az in which we want to add server while autoscaling
        - select Load balancer
        - *** group size -: 
                  - desired capacity                                                         # what are normal or average no of servers we want
                  - minimum capacity                                                         # min servers we want below this no server will remove 
                  - maximum capacity                                                         # maximum servers we want beyond this no server will add
            
            
    step 2 :- *** create policies                                                          # policies - in this we define actually when should add or remove server
    
    --> cloudwatch alarm creation --:
                              - create cloudwatch alarm --> select metric --> serch :- cpu --> ec2-by auto-scaling group --> select asg with cpu utilization metric
                              - conditions -: specifiy threshold /cpu utilization % and greater than , less than 
                              
    
    --> go to asg --> select created asg --> automatic scaling --> Dynamic scaling policies --> 
          - --> create dynamic policies --> step scaling --:
                                                      - choose cloud watch alarm 
                                                      - take a action - add :1                    # here we define add 1 server after alarm triggers
    
              
         
                
          
   Launch configuration creation 
        - Select AMI , instance type ,  keypair , security group --> create 
        
  
 ---------------------------------------------------------------------------------------------------------------------------------------------------------
 
 
 ROUTE - 53 
 
 steps -: to route traffic to single ec2
    
    step 1 :- 
      - create hosted zone for our dns 
      - change the default nameservers of dns 
                    -->  go to freenom --> service --> manage domains --> then our dns list comes --> manage domains 
                         ---> management tools --> name servers --> use custom name server --: paste here name server of created hosted zones
      
    step 2 :   
     - add record - : 
             - record name - www or subdomain names                                      # ex - www.images.prashantm.com    here "www.images" is subdomain
             - in that mention ip of ec2
             - select record type :  "A" and choose routing policies - simple
     
     
     
     
 steps to route traffic to load balancer :
        - create hosted zone for our dns 
        - add record :-
               - select record type :- A and 
               - alias - yes , and select dns name of load balancer
               - choose routing policy 
               
               
               
              
 routing policies :-  simple , failover , latency based , weighted 
 
      1 - simple routing -: 
              - create record for simple routing
              
      2 - failover routing - :
              - create health check for primary and secondory instance :
                      - want to monitor - select endpoint 
                      - ip of ec2 
                      
              - create record - 1st for primary instance - mention heath check of it , failover record type = primary
                              - 2nd for secondary instance- mention health check of secondary instance , failover record type = secondary
               
              - testing :- type domain name on browser , see primary instance web page comes or not, 
                           then stop primary instance then secondary ec2 web page comes or not
 
 
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------
        
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
      
